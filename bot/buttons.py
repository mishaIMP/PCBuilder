from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

find_btn = InlineKeyboardButton('üîç', callback_data='find')
add_btn = InlineKeyboardButton('‚ûï', callback_data='add')
my_btn = InlineKeyboardButton('üñ•', callback_data='my')
start_markup = InlineKeyboardMarkup(row_width=2)
start_markup.add(find_btn, add_btn, my_btn)

back_btn = InlineKeyboardButton('üîô', callback_data='back')
back_markup = InlineKeyboardMarkup(row_width=1)
back_markup.add(back_btn)


def add_info_markup(added):
    info = {'–º–æ–¥–µ–ª—å': 'model', '—Ü–µ–Ω—É': 'price', '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': 'amount', '—Å—Å—ã–ª–∫—É': 'link'}
    info_markup = InlineKeyboardMarkup(row_width=1)
    is_ready = True
    for key, val in info.items():
        if val not in added and val != 'link':
            is_ready = False
        icon = '‚úè' if val in added else ''
        btn = InlineKeyboardButton(icon + key + icon, callback_data=val)
        info_markup.add(btn)
    if is_ready:
        save_btn = InlineKeyboardButton('‚òë', callback_data='save')
        info_markup.add(save_btn)

    info_markup.add(InlineKeyboardButton('üîô', callback_data='back'))

    return info_markup


def build_comp_markup(added, count: int = 0):
    components = {'–Ω–∞–∑–≤–∞–Ω–∏–µ': 'title',
                  '–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä': 'cpu',
                  '–≤–∏–¥–µ–æ–∫–∞—Ä—Ç—É': 'gpu',
                  '–º–∞—Ç–µ—Ä–∏–Ω—Å–∫—É—é –ø–ª–∞—Ç—É': 'motherboard',
                  '–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–º—è—Ç—å': 'ram',
                  'HDD/SSD': 'storage',
                  '–∫–æ—Ä–ø—É—Å': 'case',
                  '–±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è': 'psu',
                  '–∫—É–ª–ª–µ—Ä/–°–ñ–û': 'culler',
                  '–∫–æ—Ä–ø—É—Å–Ω—ã–µ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä—ã': 'fan'
                  }
    comp_markup = InlineKeyboardMarkup(row_width=2)
    is_ready = True
    for key, val in components.items():
        if val not in added and val != 'additional':
            is_ready = False
        icon = '‚úè' if val in added else ''  # ‚ùå
        btn = InlineKeyboardButton(icon + key + icon, callback_data=val)
        comp_markup.add(btn)

    if count == 0:
        additional_btn = InlineKeyboardButton('–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ', callback_data='additional')
        comp_markup.add(additional_btn)
    elif count < 5:
        num = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£'][count - 1]
        additional_btn = InlineKeyboardButton(f'{num}–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ{num}', callback_data='additional')
        comp_markup.add(additional_btn)

    if is_ready:
        finish_btn = InlineKeyboardButton('‚òë', callback_data='save')
        comp_markup.add(finish_btn)

    comp_markup.add(InlineKeyboardButton('—É–¥–∞–ª–∏—Ç—å —Å–±–æ—Ä–∫—É', callback_data='back'))

    return comp_markup
